package global.jsx;
typedef IntrinsicElements = {
	var a : react.DetailedHTMLProps<react.AnchorHTMLAttributes<ts.html.HTMLAnchorElement>, ts.html.HTMLAnchorElement>;
	var abbr : react.DetailedHTMLProps<react.HTMLAttributes<ts.html.HTMLElement>, ts.html.HTMLElement>;
	var address : react.DetailedHTMLProps<react.HTMLAttributes<ts.html.HTMLElement>, ts.html.HTMLElement>;
	var area : react.DetailedHTMLProps<react.AreaHTMLAttributes<ts.html.HTMLAreaElement>, ts.html.HTMLAreaElement>;
	var article : react.DetailedHTMLProps<react.HTMLAttributes<ts.html.HTMLElement>, ts.html.HTMLElement>;
	var aside : react.DetailedHTMLProps<react.HTMLAttributes<ts.html.HTMLElement>, ts.html.HTMLElement>;
	var audio : react.DetailedHTMLProps<react.AudioHTMLAttributes<ts.html.HTMLAudioElement>, ts.html.HTMLAudioElement>;
	var b : react.DetailedHTMLProps<react.HTMLAttributes<ts.html.HTMLElement>, ts.html.HTMLElement>;
	var base : react.DetailedHTMLProps<react.BaseHTMLAttributes<ts.html.HTMLBaseElement>, ts.html.HTMLBaseElement>;
	var bdi : react.DetailedHTMLProps<react.HTMLAttributes<ts.html.HTMLElement>, ts.html.HTMLElement>;
	var bdo : react.DetailedHTMLProps<react.HTMLAttributes<ts.html.HTMLElement>, ts.html.HTMLElement>;
	var big : react.DetailedHTMLProps<react.HTMLAttributes<ts.html.HTMLElement>, ts.html.HTMLElement>;
	var blockquote : react.DetailedHTMLProps<react.BlockquoteHTMLAttributes<ts.html.HTMLElement>, ts.html.HTMLElement>;
	var body : react.DetailedHTMLProps<react.HTMLAttributes<ts.html.HTMLBodyElement>, ts.html.HTMLBodyElement>;
	var br : react.DetailedHTMLProps<react.HTMLAttributes<ts.html.HTMLBRElement>, ts.html.HTMLBRElement>;
	var button : react.DetailedHTMLProps<react.ButtonHTMLAttributes<ts.html.HTMLButtonElement>, ts.html.HTMLButtonElement>;
	var canvas : react.DetailedHTMLProps<react.CanvasHTMLAttributes<ts.html.HTMLCanvasElement>, ts.html.HTMLCanvasElement>;
	var caption : react.DetailedHTMLProps<react.HTMLAttributes<ts.html.HTMLElement>, ts.html.HTMLElement>;
	var cite : react.DetailedHTMLProps<react.HTMLAttributes<ts.html.HTMLElement>, ts.html.HTMLElement>;
	var code : react.DetailedHTMLProps<react.HTMLAttributes<ts.html.HTMLElement>, ts.html.HTMLElement>;
	var col : react.DetailedHTMLProps<react.ColHTMLAttributes<ts.html.HTMLTableColElement>, ts.html.HTMLTableColElement>;
	var colgroup : react.DetailedHTMLProps<react.ColgroupHTMLAttributes<ts.html.HTMLTableColElement>, ts.html.HTMLTableColElement>;
	var data : react.DetailedHTMLProps<react.DataHTMLAttributes<ts.html.HTMLDataElement>, ts.html.HTMLDataElement>;
	var datalist : react.DetailedHTMLProps<react.HTMLAttributes<ts.html.HTMLDataListElement>, ts.html.HTMLDataListElement>;
	var dd : react.DetailedHTMLProps<react.HTMLAttributes<ts.html.HTMLElement>, ts.html.HTMLElement>;
	var del : react.DetailedHTMLProps<react.DelHTMLAttributes<ts.html.HTMLElement>, ts.html.HTMLElement>;
	var details : react.DetailedHTMLProps<react.DetailsHTMLAttributes<ts.html.HTMLElement>, ts.html.HTMLElement>;
	var dfn : react.DetailedHTMLProps<react.HTMLAttributes<ts.html.HTMLElement>, ts.html.HTMLElement>;
	var dialog : react.DetailedHTMLProps<react.DialogHTMLAttributes<ts.html.HTMLDialogElement>, ts.html.HTMLDialogElement>;
	var div : react.DetailedHTMLProps<react.HTMLAttributes<ts.html.HTMLDivElement>, ts.html.HTMLDivElement>;
	var dl : react.DetailedHTMLProps<react.HTMLAttributes<ts.html.HTMLDListElement>, ts.html.HTMLDListElement>;
	var dt : react.DetailedHTMLProps<react.HTMLAttributes<ts.html.HTMLElement>, ts.html.HTMLElement>;
	var em : react.DetailedHTMLProps<react.HTMLAttributes<ts.html.HTMLElement>, ts.html.HTMLElement>;
	var embed : react.DetailedHTMLProps<react.EmbedHTMLAttributes<ts.html.HTMLEmbedElement>, ts.html.HTMLEmbedElement>;
	var fieldset : react.DetailedHTMLProps<react.FieldsetHTMLAttributes<ts.html.HTMLFieldSetElement>, ts.html.HTMLFieldSetElement>;
	var figcaption : react.DetailedHTMLProps<react.HTMLAttributes<ts.html.HTMLElement>, ts.html.HTMLElement>;
	var figure : react.DetailedHTMLProps<react.HTMLAttributes<ts.html.HTMLElement>, ts.html.HTMLElement>;
	var footer : react.DetailedHTMLProps<react.HTMLAttributes<ts.html.HTMLElement>, ts.html.HTMLElement>;
	var form : react.DetailedHTMLProps<react.FormHTMLAttributes<ts.html.HTMLFormElement>, ts.html.HTMLFormElement>;
	var h1 : react.DetailedHTMLProps<react.HTMLAttributes<ts.html.HTMLHeadingElement>, ts.html.HTMLHeadingElement>;
	var h2 : react.DetailedHTMLProps<react.HTMLAttributes<ts.html.HTMLHeadingElement>, ts.html.HTMLHeadingElement>;
	var h3 : react.DetailedHTMLProps<react.HTMLAttributes<ts.html.HTMLHeadingElement>, ts.html.HTMLHeadingElement>;
	var h4 : react.DetailedHTMLProps<react.HTMLAttributes<ts.html.HTMLHeadingElement>, ts.html.HTMLHeadingElement>;
	var h5 : react.DetailedHTMLProps<react.HTMLAttributes<ts.html.HTMLHeadingElement>, ts.html.HTMLHeadingElement>;
	var h6 : react.DetailedHTMLProps<react.HTMLAttributes<ts.html.HTMLHeadingElement>, ts.html.HTMLHeadingElement>;
	var head : react.DetailedHTMLProps<react.HTMLAttributes<ts.html.HTMLHeadElement>, ts.html.HTMLHeadElement>;
	var header : react.DetailedHTMLProps<react.HTMLAttributes<ts.html.HTMLElement>, ts.html.HTMLElement>;
	var hgroup : react.DetailedHTMLProps<react.HTMLAttributes<ts.html.HTMLElement>, ts.html.HTMLElement>;
	var hr : react.DetailedHTMLProps<react.HTMLAttributes<ts.html.HTMLHRElement>, ts.html.HTMLHRElement>;
	var html : react.DetailedHTMLProps<react.HtmlHTMLAttributes<ts.html.HTMLHtmlElement>, ts.html.HTMLHtmlElement>;
	var i : react.DetailedHTMLProps<react.HTMLAttributes<ts.html.HTMLElement>, ts.html.HTMLElement>;
	var iframe : react.DetailedHTMLProps<react.IframeHTMLAttributes<ts.html.HTMLIFrameElement>, ts.html.HTMLIFrameElement>;
	var img : react.DetailedHTMLProps<react.ImgHTMLAttributes<ts.html.HTMLImageElement>, ts.html.HTMLImageElement>;
	var input : react.DetailedHTMLProps<react.InputHTMLAttributes<ts.html.HTMLInputElement>, ts.html.HTMLInputElement>;
	var ins : react.DetailedHTMLProps<react.InsHTMLAttributes<ts.html.HTMLModElement>, ts.html.HTMLModElement>;
	var kbd : react.DetailedHTMLProps<react.HTMLAttributes<ts.html.HTMLElement>, ts.html.HTMLElement>;
	var keygen : react.DetailedHTMLProps<react.KeygenHTMLAttributes<ts.html.HTMLElement>, ts.html.HTMLElement>;
	var label : react.DetailedHTMLProps<react.LabelHTMLAttributes<ts.html.HTMLLabelElement>, ts.html.HTMLLabelElement>;
	var legend : react.DetailedHTMLProps<react.HTMLAttributes<ts.html.HTMLLegendElement>, ts.html.HTMLLegendElement>;
	var li : react.DetailedHTMLProps<react.LiHTMLAttributes<ts.html.HTMLLIElement>, ts.html.HTMLLIElement>;
	var link : react.DetailedHTMLProps<react.LinkHTMLAttributes<ts.html.HTMLLinkElement>, ts.html.HTMLLinkElement>;
	var main : react.DetailedHTMLProps<react.HTMLAttributes<ts.html.HTMLElement>, ts.html.HTMLElement>;
	var map : react.DetailedHTMLProps<react.MapHTMLAttributes<ts.html.HTMLMapElement>, ts.html.HTMLMapElement>;
	var mark : react.DetailedHTMLProps<react.HTMLAttributes<ts.html.HTMLElement>, ts.html.HTMLElement>;
	var menu : react.DetailedHTMLProps<react.MenuHTMLAttributes<ts.html.HTMLElement>, ts.html.HTMLElement>;
	var menuitem : react.DetailedHTMLProps<react.HTMLAttributes<ts.html.HTMLElement>, ts.html.HTMLElement>;
	var meta : react.DetailedHTMLProps<react.MetaHTMLAttributes<ts.html.HTMLMetaElement>, ts.html.HTMLMetaElement>;
	var meter : react.DetailedHTMLProps<react.MeterHTMLAttributes<ts.html.HTMLElement>, ts.html.HTMLElement>;
	var nav : react.DetailedHTMLProps<react.HTMLAttributes<ts.html.HTMLElement>, ts.html.HTMLElement>;
	var noindex : react.DetailedHTMLProps<react.HTMLAttributes<ts.html.HTMLElement>, ts.html.HTMLElement>;
	var noscript : react.DetailedHTMLProps<react.HTMLAttributes<ts.html.HTMLElement>, ts.html.HTMLElement>;
	var object : react.DetailedHTMLProps<react.ObjectHTMLAttributes<ts.html.HTMLObjectElement>, ts.html.HTMLObjectElement>;
	var ol : react.DetailedHTMLProps<react.OlHTMLAttributes<ts.html.HTMLOListElement>, ts.html.HTMLOListElement>;
	var optgroup : react.DetailedHTMLProps<react.OptgroupHTMLAttributes<ts.html.HTMLOptGroupElement>, ts.html.HTMLOptGroupElement>;
	var option : react.DetailedHTMLProps<react.OptionHTMLAttributes<ts.html.HTMLOptionElement>, ts.html.HTMLOptionElement>;
	var output : react.DetailedHTMLProps<react.OutputHTMLAttributes<ts.html.HTMLElement>, ts.html.HTMLElement>;
	var p : react.DetailedHTMLProps<react.HTMLAttributes<ts.html.HTMLParagraphElement>, ts.html.HTMLParagraphElement>;
	var param : react.DetailedHTMLProps<react.ParamHTMLAttributes<ts.html.HTMLParamElement>, ts.html.HTMLParamElement>;
	var picture : react.DetailedHTMLProps<react.HTMLAttributes<ts.html.HTMLElement>, ts.html.HTMLElement>;
	var pre : react.DetailedHTMLProps<react.HTMLAttributes<ts.html.HTMLPreElement>, ts.html.HTMLPreElement>;
	var progress : react.DetailedHTMLProps<react.ProgressHTMLAttributes<ts.html.HTMLProgressElement>, ts.html.HTMLProgressElement>;
	var q : react.DetailedHTMLProps<react.QuoteHTMLAttributes<ts.html.HTMLQuoteElement>, ts.html.HTMLQuoteElement>;
	var rp : react.DetailedHTMLProps<react.HTMLAttributes<ts.html.HTMLElement>, ts.html.HTMLElement>;
	var rt : react.DetailedHTMLProps<react.HTMLAttributes<ts.html.HTMLElement>, ts.html.HTMLElement>;
	var ruby : react.DetailedHTMLProps<react.HTMLAttributes<ts.html.HTMLElement>, ts.html.HTMLElement>;
	var s : react.DetailedHTMLProps<react.HTMLAttributes<ts.html.HTMLElement>, ts.html.HTMLElement>;
	var samp : react.DetailedHTMLProps<react.HTMLAttributes<ts.html.HTMLElement>, ts.html.HTMLElement>;
	var slot : react.DetailedHTMLProps<react.SlotHTMLAttributes<ts.html.HTMLSlotElement>, ts.html.HTMLSlotElement>;
	var script : react.DetailedHTMLProps<react.ScriptHTMLAttributes<ts.html.HTMLScriptElement>, ts.html.HTMLScriptElement>;
	var section : react.DetailedHTMLProps<react.HTMLAttributes<ts.html.HTMLElement>, ts.html.HTMLElement>;
	var select : react.DetailedHTMLProps<react.SelectHTMLAttributes<ts.html.HTMLSelectElement>, ts.html.HTMLSelectElement>;
	var small : react.DetailedHTMLProps<react.HTMLAttributes<ts.html.HTMLElement>, ts.html.HTMLElement>;
	var source : react.DetailedHTMLProps<react.SourceHTMLAttributes<ts.html.HTMLSourceElement>, ts.html.HTMLSourceElement>;
	var span : react.DetailedHTMLProps<react.HTMLAttributes<ts.html.HTMLSpanElement>, ts.html.HTMLSpanElement>;
	var strong : react.DetailedHTMLProps<react.HTMLAttributes<ts.html.HTMLElement>, ts.html.HTMLElement>;
	var style : react.DetailedHTMLProps<react.StyleHTMLAttributes<ts.html.HTMLStyleElement>, ts.html.HTMLStyleElement>;
	var sub : react.DetailedHTMLProps<react.HTMLAttributes<ts.html.HTMLElement>, ts.html.HTMLElement>;
	var summary : react.DetailedHTMLProps<react.HTMLAttributes<ts.html.HTMLElement>, ts.html.HTMLElement>;
	var sup : react.DetailedHTMLProps<react.HTMLAttributes<ts.html.HTMLElement>, ts.html.HTMLElement>;
	var table : react.DetailedHTMLProps<react.TableHTMLAttributes<ts.html.HTMLTableElement>, ts.html.HTMLTableElement>;
	var template : react.DetailedHTMLProps<react.HTMLAttributes<ts.html.HTMLTemplateElement>, ts.html.HTMLTemplateElement>;
	var tbody : react.DetailedHTMLProps<react.HTMLAttributes<ts.html.HTMLTableSectionElement>, ts.html.HTMLTableSectionElement>;
	var td : react.DetailedHTMLProps<react.TdHTMLAttributes<ts.html.HTMLTableDataCellElement>, ts.html.HTMLTableDataCellElement>;
	var textarea : react.DetailedHTMLProps<react.TextareaHTMLAttributes<ts.html.HTMLTextAreaElement>, ts.html.HTMLTextAreaElement>;
	var tfoot : react.DetailedHTMLProps<react.HTMLAttributes<ts.html.HTMLTableSectionElement>, ts.html.HTMLTableSectionElement>;
	var th : react.DetailedHTMLProps<react.ThHTMLAttributes<ts.html.HTMLTableHeaderCellElement>, ts.html.HTMLTableHeaderCellElement>;
	var thead : react.DetailedHTMLProps<react.HTMLAttributes<ts.html.HTMLTableSectionElement>, ts.html.HTMLTableSectionElement>;
	var time : react.DetailedHTMLProps<react.TimeHTMLAttributes<ts.html.HTMLElement>, ts.html.HTMLElement>;
	var title : react.DetailedHTMLProps<react.HTMLAttributes<ts.html.HTMLTitleElement>, ts.html.HTMLTitleElement>;
	var tr : react.DetailedHTMLProps<react.HTMLAttributes<ts.html.HTMLTableRowElement>, ts.html.HTMLTableRowElement>;
	var track : react.DetailedHTMLProps<react.TrackHTMLAttributes<ts.html.HTMLTrackElement>, ts.html.HTMLTrackElement>;
	var u : react.DetailedHTMLProps<react.HTMLAttributes<ts.html.HTMLElement>, ts.html.HTMLElement>;
	var ul : react.DetailedHTMLProps<react.HTMLAttributes<ts.html.HTMLUListElement>, ts.html.HTMLUListElement>;
	@:native("var")
	var var_ : react.DetailedHTMLProps<react.HTMLAttributes<ts.html.HTMLElement>, ts.html.HTMLElement>;
	var video : react.DetailedHTMLProps<react.VideoHTMLAttributes<ts.html.HTMLVideoElement>, ts.html.HTMLVideoElement>;
	var wbr : react.DetailedHTMLProps<react.HTMLAttributes<ts.html.HTMLElement>, ts.html.HTMLElement>;
	var webview : react.DetailedHTMLProps<react.WebViewHTMLAttributes<global.HTMLWebViewElement>, global.HTMLWebViewElement>;
	var svg : react.SVGProps<ts.html.SVGSVGElement>;
	var animate : react.SVGProps<ts.html.SVGElement>;
	var animateMotion : react.SVGProps<ts.html.SVGElement>;
	var animateTransform : react.SVGProps<ts.html.SVGElement>;
	var circle : react.SVGProps<ts.html.SVGCircleElement>;
	var clipPath : react.SVGProps<ts.html.SVGClipPathElement>;
	var defs : react.SVGProps<ts.html.SVGDefsElement>;
	var desc : react.SVGProps<ts.html.SVGDescElement>;
	var ellipse : react.SVGProps<ts.html.SVGEllipseElement>;
	var feBlend : react.SVGProps<ts.html.SVGFEBlendElement>;
	var feColorMatrix : react.SVGProps<ts.html.SVGFEColorMatrixElement>;
	var feComponentTransfer : react.SVGProps<ts.html.SVGFEComponentTransferElement>;
	var feComposite : react.SVGProps<ts.html.SVGFECompositeElement>;
	var feConvolveMatrix : react.SVGProps<ts.html.SVGFEConvolveMatrixElement>;
	var feDiffuseLighting : react.SVGProps<ts.html.SVGFEDiffuseLightingElement>;
	var feDisplacementMap : react.SVGProps<ts.html.SVGFEDisplacementMapElement>;
	var feDistantLight : react.SVGProps<ts.html.SVGFEDistantLightElement>;
	var feDropShadow : react.SVGProps<ts.html.SVGFEDropShadowElement>;
	var feFlood : react.SVGProps<ts.html.SVGFEFloodElement>;
	var feFuncA : react.SVGProps<ts.html.SVGFEFuncAElement>;
	var feFuncB : react.SVGProps<ts.html.SVGFEFuncBElement>;
	var feFuncG : react.SVGProps<ts.html.SVGFEFuncGElement>;
	var feFuncR : react.SVGProps<ts.html.SVGFEFuncRElement>;
	var feGaussianBlur : react.SVGProps<ts.html.SVGFEGaussianBlurElement>;
	var feImage : react.SVGProps<ts.html.SVGFEImageElement>;
	var feMerge : react.SVGProps<ts.html.SVGFEMergeElement>;
	var feMergeNode : react.SVGProps<ts.html.SVGFEMergeNodeElement>;
	var feMorphology : react.SVGProps<ts.html.SVGFEMorphologyElement>;
	var feOffset : react.SVGProps<ts.html.SVGFEOffsetElement>;
	var fePointLight : react.SVGProps<ts.html.SVGFEPointLightElement>;
	var feSpecularLighting : react.SVGProps<ts.html.SVGFESpecularLightingElement>;
	var feSpotLight : react.SVGProps<ts.html.SVGFESpotLightElement>;
	var feTile : react.SVGProps<ts.html.SVGFETileElement>;
	var feTurbulence : react.SVGProps<ts.html.SVGFETurbulenceElement>;
	var filter : react.SVGProps<ts.html.SVGFilterElement>;
	var foreignObject : react.SVGProps<ts.html.SVGForeignObjectElement>;
	var g : react.SVGProps<ts.html.SVGGElement>;
	var image : react.SVGProps<ts.html.SVGImageElement>;
	var line : react.SVGProps<ts.html.SVGLineElement>;
	var linearGradient : react.SVGProps<ts.html.SVGLinearGradientElement>;
	var marker : react.SVGProps<ts.html.SVGMarkerElement>;
	var mask : react.SVGProps<ts.html.SVGMaskElement>;
	var metadata : react.SVGProps<ts.html.SVGMetadataElement>;
	var mpath : react.SVGProps<ts.html.SVGElement>;
	var path : react.SVGProps<ts.html.SVGPathElement>;
	var pattern : react.SVGProps<ts.html.SVGPatternElement>;
	var polygon : react.SVGProps<ts.html.SVGPolygonElement>;
	var polyline : react.SVGProps<ts.html.SVGPolylineElement>;
	var radialGradient : react.SVGProps<ts.html.SVGRadialGradientElement>;
	var rect : react.SVGProps<ts.html.SVGRectElement>;
	var stop : react.SVGProps<ts.html.SVGStopElement>;
	@:native("switch")
	var switch_ : react.SVGProps<ts.html.SVGSwitchElement>;
	var symbol : react.SVGProps<ts.html.SVGSymbolElement>;
	var text : react.SVGProps<ts.html.SVGTextElement>;
	var textPath : react.SVGProps<ts.html.SVGTextPathElement>;
	var tspan : react.SVGProps<ts.html.SVGTSpanElement>;
	var use : react.SVGProps<ts.html.SVGUseElement>;
	var view : react.SVGProps<ts.html.SVGViewElement>;
};