package ts.html;
@:native("DOMMatrixReadOnly") extern class DOMMatrixReadOnly {
	function new(?init:ts.AnyOf2<String, Array<Float>>);
	final a : Float;
	final b : Float;
	final c : Float;
	final d : Float;
	final e : Float;
	final f : Float;
	final is2D : Bool;
	final isIdentity : Bool;
	final m11 : Float;
	final m12 : Float;
	final m13 : Float;
	final m14 : Float;
	final m21 : Float;
	final m22 : Float;
	final m23 : Float;
	final m24 : Float;
	final m31 : Float;
	final m32 : Float;
	final m33 : Float;
	final m34 : Float;
	final m41 : Float;
	final m42 : Float;
	final m43 : Float;
	final m44 : Float;
	function flipX():DOMMatrix;
	function flipY():DOMMatrix;
	function inverse():DOMMatrix;
	function multiply(?other:DOMMatrixInit):DOMMatrix;
	function rotate(?rotX:Float, ?rotY:Float, ?rotZ:Float):DOMMatrix;
	function rotateAxisAngle(?x:Float, ?y:Float, ?z:Float, ?angle:Float):DOMMatrix;
	function rotateFromVector(?x:Float, ?y:Float):DOMMatrix;
	function scale(?scaleX:Float, ?scaleY:Float, ?scaleZ:Float, ?originX:Float, ?originY:Float, ?originZ:Float):DOMMatrix;
	function scale3d(?scale:Float, ?originX:Float, ?originY:Float, ?originZ:Float):DOMMatrix;
	function scaleNonUniform(?scaleX:Float, ?scaleY:Float):DOMMatrix;
	function skewX(?sx:Float):DOMMatrix;
	function skewY(?sy:Float):DOMMatrix;
	function toFloat32Array():ts.lib.Float32Array;
	function toFloat64Array():ts.lib.Float64Array;
	function toJSON():Dynamic;
	function transformPoint(?point:DOMPointInit):DOMPoint;
	function translate(?tx:Float, ?ty:Float, ?tz:Float):DOMMatrix;
	static var prototype : DOMMatrixReadOnly;
	static function fromFloat32Array(array32:ts.lib.Float32Array):DOMMatrixReadOnly;
	static function fromFloat64Array(array64:ts.lib.Float64Array):DOMMatrixReadOnly;
	static function fromMatrix(?other:DOMMatrixInit):DOMMatrixReadOnly;
}