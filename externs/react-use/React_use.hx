@:jsRequire("react-use") @valueModuleOnly extern class React_use {
	static var createMemo : (fn:Any) -> ((args:haxe.extern.Rest<Any>) -> ts.lib.ReturnType<Any>);
	static var createReducerContext : (reducer:Any, defaultInitialState:react.ReducerState<Any>) -> ts.Tuple3<() -> ts.Tuple2<react.ReducerState<Any>, react.Dispatch<react.ReducerAction<Any>>>, react.FC<{ @:optional var initialState : react.ReducerState<Any>; }>, react.Context<Null<ts.Tuple2<react.ReducerState<Any>, react.Dispatch<react.ReducerAction<Any>>>>>>;
	static var createReducer : (middlewares:haxe.extern.Rest<react_use.Middleware<Any, Any>>) -> ts.AnyOf2<(reducer:(state:Any, action:Any) -> Any, initialState:Any) -> ts.Tuple2<Any, react_use.Dispatch<Any>>, (reducer:(state:Any, action:Any) -> Any, initialState:Any, initializer:(value:Any) -> Any) -> ts.Tuple2<Any, react_use.Dispatch<Any>>>;
	static var createStateContext : (defaultInitialValue:Any) -> ts.Tuple3<() -> ts.Tuple2<Any, react.Dispatch<react.SetStateAction<Any>>>, react.FC<{ @:optional var initialValue : Any; }>, react.Context<Null<ts.Tuple2<Any, react.Dispatch<react.SetStateAction<Any>>>>>>;
	static function useAsync<Result, Args>(fn:(args:haxe.extern.Rest<Any>) -> ts.lib.Promise<Result>, ?deps:react.DependencyList):react_use.AsyncState<Result>;
	static function useAsyncFn<Result, Args>(fn:(args:haxe.extern.Rest<Any>) -> ts.lib.Promise<Result>, ?deps:react.DependencyList, ?initialState:ts.AnyOf3<{ var loading : Bool; @:optional var error : Any; @:optional var value : Any; }, { var loading : Bool; var error : ts.lib.Error; @:optional var value : Any; }, { var loading : Bool; @:optional var error : Any; var value : Result; }>):react_use.AsyncFn<Result, Args>;
	static var useAsyncRetry : ts.AnyOf2<(fn:() -> ts.lib.Promise<Any>) -> ts.AnyOf3<{ var retry : () -> Void; var loading : Bool; @:optional var error : Any; @:optional var value : Any; }, { var retry : () -> Void; var loading : Bool; var error : ts.lib.Error; @:optional var value : Any; }, { var retry : () -> Void; var loading : Bool; @:optional var error : Any; var value : Any; }>, (fn:() -> ts.lib.Promise<Any>, deps:react.DependencyList) -> ts.AnyOf3<{ var retry : () -> Void; var loading : Bool; @:optional var error : Any; @:optional var value : Any; }, { var retry : () -> Void; var loading : Bool; var error : ts.lib.Error; @:optional var value : Any; }, { var retry : () -> Void; var loading : Bool; @:optional var error : Any; var value : Any; }>>;
	static var useAudio : (elOrProps:ts.AnyOf2<react_use.HTMLMediaProps, react.ReactElement<react_use.HTMLMediaProps, ts.AnyOf3<String, (props:Dynamic) -> Null<react.ReactElement<Dynamic, Dynamic>>, { }>>>) -> ts.Tuple4<react.ReactElement<react_use.HTMLMediaProps, ts.AnyOf3<String, (props:Dynamic) -> Null<react.ReactElement<Dynamic, Dynamic>>, { }>>, react_use.HTMLMediaState, react_use.HTMLMediaControls, { var current : Null<ts.html.HTMLAudioElement>; }>;
	static var useBattery : () -> react_use.UseBatteryState;
	static var useBeforeUnload : ts.AnyOf3<() -> Void, (enabled:ts.AnyOf2<Bool, () -> Bool>) -> Void, (enabled:ts.AnyOf2<Bool, () -> Bool>, message:String) -> Void>;
	static var useBoolean : (initialValue:Bool) -> ts.Tuple2<Bool, ts.AnyOf2<() -> Void, (nextValue:Dynamic) -> Void>>;
	static var useClickAway : ts.AnyOf2<(ref:react.RefObject<Null<ts.html.HTMLElement>>, onClickAway:(event:Any) -> Void) -> Void, (ref:react.RefObject<Null<ts.html.HTMLElement>>, onClickAway:(event:Any) -> Void, events:Array<String>) -> Void>;
	static var useCookie : (cookieName:String) -> ts.Tuple3<Null<String>, ts.AnyOf2<(newValue:String) -> Void, (newValue:String, options:Dynamic) -> Void>, () -> Void>;
	static var useCopyToClipboard : () -> ts.Tuple2<react_use.CopyToClipboardState, (value:String) -> Void>;
	static function useCounter(?initialValue:ts.AnyOf2<Float, react_use.InitialStateSetter<Float>>, ?max:Float, ?min:Float):ts.Tuple2<Float, react_use.CounterActions>;
	static var useCss : (css:Dynamic) -> String;
	static var useCustomCompareEffect : (effect:react.EffectCallback, deps:react.DependencyList, depsEqual:react_use.DepsEqualFnType) -> Void;
	static function useDebounce(fn:ts.lib.Function, ?ms:Float, ?deps:react.DependencyList):react_use.UseDebounceReturn;
	static var useDeepCompareEffect : (effect:react.EffectCallback, deps:react.DependencyList) -> Void;
	static var useDefault : (defaultValue:Any, initialValue:ts.AnyOf2<Any, () -> Any>) -> ts.Tuple2<Any, react.Dispatch<react.SetStateAction<Null<Any>>>>;
	static var useDrop : ts.AnyOf3<() -> react_use.DropAreaState_, (options:react_use.DropAreaOptions_) -> react_use.DropAreaState_, (options:react_use.DropAreaOptions_, args:Array<Any>) -> react_use.DropAreaState_>;
	static var useDropArea : ts.AnyOf2<() -> ts.Tuple2<react_use.DropAreaBond, react_use.DropAreaState>, (options:react_use.DropAreaOptions) -> ts.Tuple2<react_use.DropAreaBond, react_use.DropAreaState>>;
	static var useEffectOnce : (effect:react.EffectCallback) -> Void;
	static function useEnsuredForwardedRef<T>(forwardedRef:react.MutableRefObject<T>):react.MutableRefObject<T>;
	static function ensuredForwardRef<T, P>(Component:react.RefForwardingComponent<T, P>):react.ForwardRefExoticComponent<Dynamic>;
	static var useEvent : ts.AnyOf4<(name:Dynamic) -> Void, (name:Dynamic, handler:Dynamic) -> Void, (name:Dynamic, handler:Dynamic, target:ts.AnyOf2<ts.html.Window, Any>) -> Void, (name:Dynamic, handler:Dynamic, target:ts.AnyOf2<ts.html.Window, Any>, options:Dynamic) -> Void>;
	static var useError : () -> ((err:ts.lib.Error) -> Void);
	static var useFavicon : (href:String) -> Void;
	static var useFullscreen : ts.AnyOf2<(ref:react.RefObject<ts.html.Element>, on:Bool) -> Bool, (ref:react.RefObject<ts.html.Element>, on:Bool, options:react_use.FullScreenOptions) -> Bool>;
	static var useGeolocation : ts.AnyOf2<() -> react_use.GeoLocationSensorState, (options:ts.html.PositionOptions) -> react_use.GeoLocationSensorState>;
	static function useGetSet<S>(initialState:react_use.InitialHookState<S>):ts.Tuple2<() -> S, react.Dispatch<react_use.HookState<S>>>;
	static var useGetSetState : ts.AnyOf2<() -> ts.Tuple2<() -> Any, (patch:{ }) -> Void>, (initialState:Any) -> ts.Tuple2<() -> Any, (patch:{ }) -> Void>>;
	static var useHarmonicIntervalFn : ts.AnyOf2<(fn:ts.lib.Function) -> Void, (fn:ts.lib.Function, delay:Float) -> Void>;
	static var useHover : (element:react_use.Element_) -> ts.Tuple2<react.ReactElement<Dynamic, ts.AnyOf3<String, (props:Dynamic) -> Null<react.ReactElement<Dynamic, Dynamic>>, { }>>, Bool>;
	static var useHoverDirty : ts.AnyOf2<(ref:react.RefObject<ts.html.Element>) -> Bool, (ref:react.RefObject<ts.html.Element>, enabled:Bool) -> Bool>;
	static var useIdle : ts.AnyOf4<() -> Bool, (ms:Float) -> Bool, (ms:Float, initialState:Bool) -> Bool, (ms:Float, initialState:Bool, events:Array<String>) -> Bool>;
	static var useIntersection : (ref:react.RefObject<ts.html.HTMLElement>, options:ts.html.IntersectionObserverInit) -> Null<ts.html.IntersectionObserverEntry>;
	static var useInterval : ts.AnyOf2<(callback:ts.lib.Function) -> Void, (callback:ts.lib.Function, delay:Float) -> Void>;
	static var useIsomorphicLayoutEffect : ts.AnyOf2<(effect:react.EffectCallback) -> Void, (effect:react.EffectCallback, deps:react.DependencyList) -> Void>;
	static var useKey : ts.AnyOf4<(key:react_use.KeyFilter) -> Void, (key:react_use.KeyFilter, fn:react_use.Handler) -> Void, (key:react_use.KeyFilter, fn:react_use.Handler, opts:react_use.UseKeyOptions) -> Void, (key:react_use.KeyFilter, fn:react_use.Handler, opts:react_use.UseKeyOptions, deps:react.DependencyList) -> Void>;
	static var createBreakpoint : ts.AnyOf2<() -> (() -> String), (breakpoints:{ }) -> (() -> String)>;
	static var useKeyPress : (keyFilter:react_use.KeyFilter) -> ts.Tuple2<Bool, Null<ts.html.KeyboardEvent>>;
	static var useKeyPressEvent : ts.AnyOf4<(key:react_use.KeyFilter) -> Void, (key:react_use.KeyFilter, keydown:react_use.Handler) -> Void, (key:react_use.KeyFilter, keydown:react_use.Handler, keyup:react_use.Handler) -> Void, (key:react_use.KeyFilter, keydown:react_use.Handler, keyup:react_use.Handler, useKeyPress:(keyFilter:react_use.KeyFilter) -> ts.Tuple2<Bool, Null<ts.html.KeyboardEvent>>) -> Void>;
	static var useLifecycles : ts.AnyOf2<(mount:Dynamic) -> Void, (mount:Dynamic, unmount:Dynamic) -> Void>;
	static function useList<T>(?initialList:ts.AnyOf2<Array<T>, react_use.InitialStateSetter<Array<T>>>):ts.Tuple2<Array<T>, react_use.ListActions<T>>;
	static var useLocalStorage : ts.AnyOf3<(key:String) -> ts.Tuple2<Any, react.Dispatch<react.SetStateAction<Any>>>, (key:String, initialValue:Any) -> ts.Tuple2<Any, react.Dispatch<react.SetStateAction<Any>>>, (key:String, initialValue:Any, options:ts.AnyOf2<{ var raw : Bool; }, { var raw : Bool; var serializer : (value:Any) -> String; var deserializer : (value:String) -> Any; }>) -> ts.Tuple2<Any, react.Dispatch<react.SetStateAction<Any>>>>;
	static var useLocation : () -> react_use.LocationSensorState;
	static var useLockBodyScroll : ts.AnyOf3<() -> Void, (_locked:Bool) -> Void, (_locked:Bool, _elementRef:react.RefObject<ts.html.HTMLElement>) -> Void>;
	static var useLogger : (componentName:String, rest:haxe.extern.Rest<Dynamic>) -> Void;
	static var useLongPress : ts.AnyOf2<(callback:(e:ts.AnyOf2<ts.html.MouseEvent, ts.html.TouchEvent>) -> Void) -> { final onMouseDown : (e:Dynamic) -> Void; final onTouchStart : (e:Dynamic) -> Void; final onMouseUp : () -> Void; final onMouseLeave : () -> Void; final onTouchEnd : () -> Void; }, (callback:(e:ts.AnyOf2<ts.html.MouseEvent, ts.html.TouchEvent>) -> Void, __1:react_use.Options_) -> { final onMouseDown : (e:Dynamic) -> Void; final onTouchStart : (e:Dynamic) -> Void; final onMouseUp : () -> Void; final onMouseLeave : () -> Void; final onTouchEnd : () -> Void; }>;
	static var useMap : ts.AnyOf2<() -> ts.Tuple2<Any, react_use.Actions_<Any>>, (initialMap:Any) -> ts.Tuple2<Any, react_use.Actions_<Any>>>;
	static var useMedia : ts.AnyOf2<(query:String) -> Bool, (query:String, defaultState:Bool) -> Bool>;
	static var useMediaDevices : () -> { };
	@:overload(function<S>(mediator:react_use.StateMediator<S>, initialState:S):react_use.UseMediatedStateReturn<S> { })
	static function useMediatedState<S>(mediator:react_use.StateMediator<Null<S>>):react_use.UseMediatedStateReturn<Null<S>>;
	static var useMethods : (createMethods:react_use.CreateMethods<Any, Any>, initialState:Any) -> ts.Tuple2<Any, { }>;
	static var useMotion : ts.AnyOf2<() -> react_use.MotionSensorState, (initialState:react_use.MotionSensorState) -> react_use.MotionSensorState>;
	static var useMount : (fn:() -> Void) -> Void;
	static function useMountedState():() -> Bool;
	static var useMouse : (ref:react.RefObject<ts.html.Element>) -> react_use.State_____;
	static var useMouseHovered : ts.AnyOf2<(ref:react.RefObject<ts.html.Element>) -> react_use.State_____, (ref:react.RefObject<ts.html.Element>, options:react_use.UseMouseHoveredOptions) -> react_use.State_____>;
	static var useNetwork : ts.AnyOf2<() -> react_use.NetworkState, (initialState:react_use.NetworkState) -> react_use.NetworkState>;
	static function useNumber(?initialValue:ts.AnyOf2<Float, react_use.InitialStateSetter<Float>>, ?max:Float, ?min:Float):ts.Tuple2<Float, react_use.CounterActions>;
	@:overload(function<T>(observableDollar:react_use.Observable<T>, initialValue:T):T { })
	static function useObservable<T>(observableDollar:react_use.Observable<T>):Null<T>;
	static var useOrientation : ts.AnyOf2<() -> react_use.OrientationState, (initialState:react_use.OrientationState) -> react_use.OrientationState>;
	static var usePageLeave : ts.AnyOf2<(onPageLeave:Dynamic) -> Void, (onPageLeave:Dynamic, args:Array<Any>) -> Void>;
	static var usePermission : (permissionDesc:ts.AnyOf4<ts.html.DevicePermissionDescriptor, ts.html.PermissionDescriptor, ts.html.MidiPermissionDescriptor, ts.html.PushPermissionDescriptor>) -> react_use.State____;
	static var usePrevious : (state:Any) -> Null<Any>;
	static function usePreviousDistinct<T>(value:T, ?compare:react_use.Predicate<T>):Null<T>;
	static var usePromise : react_use.UsePromise;
	static var useQueue : ts.AnyOf2<() -> react_use.QueueMethods<Any>, (initialValue:Array<Any>) -> react_use.QueueMethods<Any>>;
	static var useRaf : ts.AnyOf3<() -> Float, (ms:Float) -> Float, (ms:Float, delay:Float) -> Float>;
	static function useRafLoop(callback:ts.html.FrameRequestCallback, ?initiallyActive:Bool):react_use.RafLoopReturns;
	static var useRafState : (initialState:ts.AnyOf2<Any, () -> Any>) -> ts.Tuple2<Any, react.Dispatch<react.SetStateAction<Any>>>;
	static var useSearchParam : react_use.UseQueryParam;
	static var useScroll : (ref:react.RefObject<ts.html.HTMLElement>) -> react_use.State___;
	static var useScrolling : (ref:react.RefObject<ts.html.HTMLElement>) -> Bool;
	static var useSessionStorage : ts.AnyOf3<(key:String) -> ts.Tuple2<Any, (value:Any) -> Void>, (key:String, initialValue:Any) -> ts.Tuple2<Any, (value:Any) -> Void>, (key:String, initialValue:Any, raw:Bool) -> ts.Tuple2<Any, (value:Any) -> Void>>;
	static var useSetState : ts.AnyOf2<() -> ts.Tuple2<Any, (patch:ts.AnyOf2<{ }, (prevState:Any) -> { }>) -> Void>, (initialState:Any) -> ts.Tuple2<Any, (patch:ts.AnyOf2<{ }, (prevState:Any) -> { }>) -> Void>>;
	static var useShallowCompareEffect : (effect:react.EffectCallback, deps:react.DependencyList) -> Void;
	static var useSize : ts.AnyOf2<(element:react_use.Element) -> ts.Tuple2<react.ReactElement<Dynamic, ts.AnyOf3<String, (props:Dynamic) -> Null<react.ReactElement<Dynamic, Dynamic>>, { }>>, react_use.State__>, (element:react_use.Element, __1:{ @:optional var width : Float; @:optional var height : Float; }) -> ts.Tuple2<react.ReactElement<Dynamic, ts.AnyOf3<String, (props:Dynamic) -> Null<react.ReactElement<Dynamic, Dynamic>>, { }>>, react_use.State__>>;
	static var useSlider : ts.AnyOf2<(ref:react.RefObject<ts.html.HTMLElement>) -> react_use.State_, (ref:react.RefObject<ts.html.HTMLElement>, options:{ @:optional var onScrub : (value:Float) -> Void; @:optional var onScrubStart : () -> Void; @:optional var onScrubStop : (value:Float) -> Void; @:optional var reverse : Bool; @:optional var styles : ts.AnyOf2<Bool, react.CSSProperties>; @:optional var vertical : Bool; }) -> react_use.State_>;
	static var useSpeech : ts.AnyOf2<(text:String) -> react_use.SpeechState, (text:String, opts:react_use.SpeechOptions) -> react_use.SpeechState>;
	static var useStartTyping : (onStartTyping:(event:ts.html.KeyboardEvent) -> Void) -> Void;
	@:overload(function<S>():react_use.UseStateHistoryReturn<Null<S>> { })
	static function useStateWithHistory<S, I>(initialState:react_use.InitialHookState<S>, ?capacity:Float, ?initialHistory:Array<I>):react_use.UseStateHistoryReturn<S>;
	static function useStateList<T>(?stateSet:Array<T>):react_use.UseStateListReturn<T>;
	static var useThrottle : ts.AnyOf2<(value:Any) -> Any, (value:Any, ms:Float) -> Any>;
	static var useThrottleFn : (fn:(args:haxe.extern.Rest<Any>) -> Any, ms:Null<Float>, args:Any) -> Null<Any>;
	static function useTimeout(?ms:Float):react_use.UseTimeoutReturn;
	static function useTimeoutFn(fn:ts.lib.Function, ?ms:Float):react_use.UseTimeoutFnReturn;
	static var useTitle : ts.AnyOf2<(title:String) -> Void, (title:String, options:react_use.UseTitleOptions) -> Void>;
	static var useToggle : (initialValue:Bool) -> ts.Tuple2<Bool, ts.AnyOf2<() -> Void, (nextValue:Dynamic) -> Void>>;
	static var useTween : ts.AnyOf4<() -> Float, (easingName:String) -> Float, (easingName:String, ms:Float) -> Float, (easingName:String, ms:Float, delay:Float) -> Float>;
	static var useUnmount : (fn:() -> Dynamic) -> Void;
	static var useUnmountPromise : () -> react_use.Race;
	static var useUpdate : () -> (() -> Void);
	static var useUpdateEffect : ts.AnyOf2<(effect:react.EffectCallback) -> Void, (effect:react.EffectCallback, deps:react.DependencyList) -> Void>;
	static function useUpsert<T>(predicate:(a:T, b:T) -> Bool, ?initialList:ts.AnyOf2<Array<T>, react_use.InitialStateSetter<Array<T>>>):ts.Tuple2<Array<T>, react_use.UpsertListActions<T>>;
	static var useVibrate : ts.AnyOf4<() -> Void, (enabled:Bool) -> Void, (enabled:Bool, pattern:ts.AnyOf2<Float, Array<Float>>) -> Void, (enabled:Bool, pattern:ts.AnyOf2<Float, Array<Float>>, loop:Bool) -> Void>;
	static var useVideo : (elOrProps:ts.AnyOf2<react_use.HTMLMediaProps, react.ReactElement<react_use.HTMLMediaProps, ts.AnyOf3<String, (props:Dynamic) -> Null<react.ReactElement<Dynamic, Dynamic>>, { }>>>) -> ts.Tuple4<react.ReactElement<react_use.HTMLMediaProps, ts.AnyOf3<String, (props:Dynamic) -> Null<react.ReactElement<Dynamic, Dynamic>>, { }>>, react_use.HTMLMediaState, react_use.HTMLMediaControls, { var current : Null<ts.html.HTMLAudioElement>; }>;
	static function useStateValidator<V, S, I>(state:S, validator:react_use.StateValidator<V, S>, ?initialState:I):react_use.UseStateValidatorReturn<V>;
	static function useScrollbarWidth():Null<Float>;
	static function useMultiStateValidator<V, S, I>(states:S, validator:react_use.MultiStateValidator<V, S>, ?initialValidity:I):react_use.UseStateValidatorReturn<V>;
	static var useWindowScroll : () -> react_use.State;
	static var useWindowSize : ts.AnyOf3<() -> { var width : Float; var height : Float; }, (initialWidth:Float) -> { var width : Float; var height : Float; }, (initialWidth:Float, initialHeight:Float) -> { var width : Float; var height : Float; }>;
	static var useMeasure : () -> ts.Tuple2<(instance:Any) -> Void, { var width : Float; var height : Float; var left : Float; var right : Float; var bottom : Float; var top : Float; var x : Float; var y : Float; }>;
	static function useRendersCount():Float;
	static function useFirstMountState():Bool;
	static var useSet : ts.AnyOf2<() -> ts.Tuple2<ts.lib.Set<Any>, react_use.Actions<Any>>, (initialSet:ts.lib.Set<Any>) -> ts.Tuple2<ts.lib.Set<Any>, react_use.Actions<Any>>>;
	static function createGlobalState<S>(?initialState:S):() -> ts.Tuple2<Null<S>, (state:S) -> Void>;
	/**
		read and write url hash, response to url hash change
	**/
	static var useHash : () -> ts.Tuple2<String, (newHash:String) -> Void>;
}